version: '3'

services:
  mongodb:
    image: 'bitnami/mongodb:4.2.8'
    environment:
      - MONGODB_USERNAME=fraud_feature_store
      - MONGODB_PASSWORD=fraud_feature_store
      - MONGODB_DATABASE=fraud_feature_store
      - ALLOW_EMPTY_PASSWORD=yes
      - MONGODB_PORT_NUMBER=27018
      - MONGODB_REPLICA_SET_NAME=rs0
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ADVERTISED_HOSTNAME=mongodb
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_ROOT_PASSWORD=replicasetkey123
      - REDIS_REPLICATION_MODE=master
    ports:
      - "27018:27018"
  mongodb-secondary:
    image: 'bitnami/mongodb:4.2.8'
    depends_on:
      - mongodb
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb
      - MONGODB_INITIAL_PRIMARY_PORT_NUMBER=27018
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=replicasetkey123
      - MONGODB_REPLICA_SET_NAME=rs0
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
  postgres:
    restart: always
    image: "postgres:10.4-alpine"
    environment:
      POSTGRES_DB: fraud-feature-store
      POSTGRES_USER: fraud-feature-store
      POSTGRES_PASSWORD: fraud-feature-store
    ports:
      - "5432:5432"
  localstack:
    image: localstack/localstack:1.2.0
    container_name: localstack_fraud_features
    ports:
      - '4563-4599:4563-4599'
      - '8055:8080'
    environment:
      - SERVICES=sqs,s3
      - DEBUG=1
      - AWS_ACCESS_KEY_ID=fraud-feature-store
      - AWS_SECRET_ACCESS_KEY=fraud-feature-store
    volumes:
      - './.localstack:/tmp/localstack'
      - './.localstack/docker-entrypoint-initaws.d:/docker-entrypoint-initaws.d/'
  redis:
    restart: always
    image: "redis:3-alpine3.8"
    ports:
      - "6379:6379"
  kafka:
    image: "spotify/kafka"
    ports:
      - "2181:2181" # Zookeper
      - "9092:9092" # Kafka
    environment:
      ADVERTISED_HOST: 127.0.0.1
      ADVERTISED_PORT: 9092
